# Solution 1

# O(n^2) time | O (1) space - where n is the length of the input array
def firstDuplicateValue(array):
    minumnSecondIndex = len(array)

    for i in range(len(array)):
        value = array[i]
        for j in range(i + 1, len(array)):
            valueToCompare = array[j]
            if value == valueToCompare:
                minumnSecondIndex = min(minumnSecondIndex, j)
    
    if minumnSecondIndex == len(array):
        return -1
    
    return array[minumnSecondIndex]
    
# Solution 2
# O (n) time | O (n) space - where n is the length of the input array
def firstDuplicateValue(array):
    seen = set()

    for value in array:
        if value in seen:
            return value
        seen.add(value)
    return -1

# Solution 3
# O (n) time | O (1) space - where n is the length of the input array
def firstDuplicateValue(array):
    for value in array:
        absValue = abs(value)
        if array[absValue - 1] < 0:
            return absValue
        array[absValue - 1] *= -1
    return -1

# Sandbox
import program
import unittest


class TestProgram(unittest.TestCase):
    def test_case_1(self):
        input = [2, 1, 5, 2, 3, 3, 4]
        expected = 2
        actual = program.firstDuplicateValue(input)
        self.assertEqual(actual, expected)
