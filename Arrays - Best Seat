# Solution 1
# O (n) time | O (1) space - where n is the number of seats
def bestSeat(seats):
    bestSeat = -1
    maxSpace = 0

    left = 0
    while left < len(seats):
        right = left + 1
        while right < len(seats) and seats[right] == 0:
            right += 1
        availableSeat = right - left - 1
        if availableSeat > maxSpace:
            bestSeat = (left + right) // 2
            maxSpace = availableSeat
        left = right
    return bestSeat

# Sandbox
import program
import unittest


class TestProgram(unittest.TestCase):
    def test_case_1(self):
        input = [1, 0, 1, 0, 0, 0, 1]
        expected = 4
        actual = program.bestSeat(input)
        self.assertEqual(actual, expected)
